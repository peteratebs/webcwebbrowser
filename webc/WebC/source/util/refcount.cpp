/*
|  REFCOUNT.CPP -
|
|  EBS -
|
|
|  Copyright EBS Inc. , 2004
|  All rights reserved.
|  This code may not be redistributed in source or linkable object form
|  without the consent of its author.
*/

/*****************************************************************************/
/* Header files
 *****************************************************************************/

#include "refcount.hpp"
#include "webcassert.h"

/*****************************************************************************/
/* Macros
 *****************************************************************************/

/*****************************************************************************/
/* Types
 *****************************************************************************/

/*****************************************************************************/
/* Function Prototypes
 *****************************************************************************/

/*****************************************************************************/
/* Data
 *****************************************************************************/

/*****************************************************************************/
/* Function Definitions
 *****************************************************************************/

//=============================================================================
// ReferenceCounted methods
//=============================================================================

//-----------------------------------------------------------------------------
ReferenceCounted::ReferenceCounted (void)
{
	mReferenceCount = 1;
}

//-----------------------------------------------------------------------------
ReferenceCounted::~ReferenceCounted (void)
{
	WEBC_ASSERT(mReferenceCount == 1);
}

//-----------------------------------------------------------------------------
void ReferenceCounted::claim (void)
{
	mReferenceCount++;
	WEBC_ASSERT(mReferenceCount > 1);
}

//-----------------------------------------------------------------------------
void ReferenceCounted::release (void)
{
	WEBC_ASSERT(mReferenceCount > 0);
	if (mReferenceCount == 1)
	{
		recycle();
	}
	else
	{
		mReferenceCount--;
	}
}

//-----------------------------------------------------------------------------
//void ReferenceCounted::recycle (const char* file, int line)
//{
//	WEBC_ASSERT(mReferenceCount == 1);
//	recycle();
//}
